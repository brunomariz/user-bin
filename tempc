#!/bin/bash

Help()
{
   # Display Help
   echo
   echo "Run a temporary container."
   echo
   echo "Syntax: tempc [-h|n:|p:|s|v] DOCKER_IMAGE"
   echo "options:"
   echo "h       Print this Help."
   echo "n NAME  Set container name and hostname."
   echo "n PORT  Set container name and hostname. PORT should be in the same format as docker -p argument, HOST_PORT:CONTAINER_PORT"
   echo "s       Create shared volume at \$PWD:/home/\$USER/shared."
   echo "v       Print software version."
   echo
}

Version(){
   echo "Version $1"
}

EchoYellow(){
   echo -e "\033[33m$1\033[0m"
}

############################################################
############################################################
# Main program                                             #
############################################################
############################################################

# Declare arguments array
declare -a args=()

# Get the options
while getopts ":hn:p:sv" option; do
   case $option in
      h) # display Help
         Help
         exit;;
      n) # set container name
         # Add name argument
         CONTAINER_NAME=$OPTARG
         echo $CONTAINER_NAME
         args+=("--name=$CONTAINER_NAME --hostname=$CONTAINER_NAME");;
      p) # set ports
         # Add ports argument
         CONTAINER_PORTS=$OPTARG
         args+=("-p $CONTAINER_PORTS");;
      s) # create shared volume
         # Add shared volume arguments
         CONTAINER_SHARED_DIR="/home/$USER/shared"
         HOST_SHARED_DIR=$PWD
         EchoYellow "WARNING: creating SHARED VOLUME between host and container"
         EchoYellow "Any changes made on container's $CONTAINER_SHARED_DIR directory will be applied to host's $HOST_SHARED_DIR directory."
         args+=("--workdir=$CONTAINER_SHARED_DIR")
         args+=("-v $HOST_SHARED_DIR:$CONTAINER_SHARED_DIR");;

      v) # display version
         Version;
         exit;;
     \?) # Invalid option
         echo "Error: Invalid option"
         exit;;
   esac
done

shift $(($OPTIND - 1))
DOCKER_IMAGE=$1

if [ -z $CONTAINER_NAME ]; then
   echo "No image provided."
   Help
   exit
fi

# Add image argument
args+=("$DOCKER_IMAGE /bin/bash")

if [ -z $CONTAINER_NAME ]; then
   echo "Creating container with random name. For naming options run tempc -h."
fi

# Run container
docker run --rm -it \
   $(echo "${args[@]}")

